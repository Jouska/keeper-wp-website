
// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800]: Normal styles apply
1800px + :      Big dekstop

$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px (ie, divide the original pixel width by 16)
(So .. 600px / 16px in calc = 37.5em )
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone-land {
        @media only screen and (max-height: 37.5em) { @content };
    }
    @if $breakpoint == phone-port-small {
        @media only screen and (max-width: 37.5em) and (max-height: 43.75em) { @content };
    }
    @if $breakpoint == phone-port-large {
        @media only screen and (max-width: 37.5em) and (min-height: 49em) { @content };
    }
    @if $breakpoint == tab-port-small {
        @media only screen and (max-width: 56.25em) and (max-height: 64em) { @content };     
    }
    @if $breakpoint == tab-port-large {
        @media only screen and (min-width: 56.25em) and (min-height: 48.75em) and (max-width: 65em) { @content }; 
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) and (max-height: 48em) { @content };    
    }
    // @if $breakpoint == big-desktop {
    //     @media only screen and (min-width: 112.5em) { @content };    //1800
    // }
    // @if $breakpoint == land {
    //     @media only screen and (max-height: 43.75em) { @content }; // 700 px Height
    // }
}


// @mixin respond($breakpoint) {
//     @if $breakpoint == phone {
//         @media only screen and (max-width: 37.5em) { @content };    //600px
//     }
//     @if $breakpoint == phone-port-small {
//         @media only screen and (max-width: 56.25em) and (max-height: 43.75em) { @content };
//     }
//     @if $breakpoint == phone-port-large {
//         @media only screen and (max-width: 56.25em) and (min-height: 49em) { @content };
//     }
//     @if $breakpoint == tab-port {
//         @media only screen and (max-width: 56.25em) { @content };     //900px
//     }
//     @if $breakpoint == tab-land {
//         @media only screen and (max-width: 75em) { @content };    //1200px
//     }
//     @if $breakpoint == big-desktop {
//         @media only screen and (min-width: 112.5em) { @content };    //1800
//     }
//     @if $breakpoint == land {
//         @media only screen and (max-height: 43.75em) { @content }; // 700 px Height
//     }
// }

// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 20) * 1px;
	font-size: $sizeValue * 1.25rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
